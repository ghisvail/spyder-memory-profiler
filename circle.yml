# https://circleci.com/gh/spyder-ide/spyder-line-profiler

machine:
  environment:
    # Used by qthelpers to close widgets after a defined time
    TEST_CI: "True"
    TEST_CI_APP: "True"
    # Python versions to tests (Maximum of 4 different versions)
    PY_VERSIONS: "3.5 3.4 2.7"
    # Environment variables used by astropy helpers
    TRAVIS_OS_NAME: "linux"
    CONDA_DEPENDENCIES: "memory_profiler mock pytest spyder"
    PIP_DEPENDENCIES: "pytest-qt"

dependencies:
  override:
    # First convert PY_VERSIONS to an array and then select the python version based on the CIRCLE_NODE_INDEX
    - export PY_VERSIONS=($PY_VERSIONS) &&
      export TRAVIS_PYTHON_VERSION=${PY_VERSIONS[$CIRCLE_NODE_INDEX]} && 
      echo -e "PYTHON = $TRAVIS_PYTHON_VERSION \n============" &&
      git clone git://github.com/astropy/ci-helpers.git &&
      source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh &&
      export PATH="$HOME/miniconda/bin:$PATH" &&
      source activate test &&
      python setup.py develop;

test:
  override:
    # Check PyQt5
    - export PATH="$HOME/miniconda/bin:$PATH" && source activate test && export PYTEST_QT_API="pyqt5" && conda install qt=5.* pyqt=5.* && spyder --reset && spyder && py.test spyder_memory_profiler: # note the colon
        parallel: true
    # Check PyQt4
    - export PATH="$HOME/miniconda/bin:$PATH" && source activate test && export PYTEST_QT_API="pyqt4v2" && conda install qt=4.* pyqt=4.* && spyder --reset && spyder && py.test spyder_memory_profiler: # note the colon
        parallel: true
    # Check Pyside
    - if [[ $TRAVIS_PYTHON_VERSION == 2.7 ]]; then export PATH="$HOME/miniconda/bin:$PATH" && source activate test && export PYTEST_QT_API="pyside" && conda install qt=4.* pyside && spyder --reset && spyder && py.test spyder_memory_profiler; fi: # note the colon
        parallel: true
